<%- include('../layouts/header.ejs') %>

    <style>
        .center-heading {
        text-align: center;
    }
</style>
<nav aria-label="breadcrumb" class="breadcrumb-nav mb-3">
    <div class="container">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/userhome">Home</a></li>
            <li class="breadcrumb-item"><a href="shop">Shop</a></li>
            <li class="breadcrumb-item"><a href="orders">Order</a></li>
            <li class="breadcrumb-item active" aria-current="page">SingleOrder</li>
        </ol>
    </div>
</nav>
        <!-- Main content -->
    <div class="container-fluid">
        <div class="row">
            <aside class="col-md-4 col-lg-3">
                <ul class="nav nav-dashboard flex-column mb-3 mb-md-0" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link " id="tab-dashboard-link" href="/profile"
                            aria-selected="true">Profile</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" id="tab-orders-link" href="/orders" aria-controls="tab-orders"
                            aria-selected="false">Orders</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="tab-wallet-link" href="/wallet" aria-controls="tab-wallet"
                            aria-selected="false">Wallet</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link " id="tab-address-link" href="/address"
                            aria-selected="true">Adresses</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="tab-account-link" href="/accountDetails"
                            aria-controls="tab-account" aria-selected="false">Account Details</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/logout">Sign Out</a>
                    </li>
                </ul>
            </aside>
            
            <div class="row">
                <div class="col-lg-8 col-md-12">
                    <div class="card mb-4">
                        <div class="card-body">
                            
                           <u><b><h1 class="h5 mb-0 center-heading">Your Orders</h1></b></u> 
                            <div class="mb-3 d-flex justify-content-between">
                                <div>
                                    <b><span>Order ID: <%= orderDetails.orderUniqueId %></span></b><br>
                                    <b><span>Date: <%= orderDetails.createdAt.toLocaleDateString() %></span></b><br>
                                    <b><span>Payment Method: <%= orderDetails.paymentMethod %></span></b><br>
                                    <b><span>Payment Status: 
                                        <%= 
                                        orderDetails.paymentMethod === 'cash_on_delivery' ? 
                                            (orderDetails.paymentStatus === 'paid' ? 'Paid' : 'Payment Pending') :
                                        orderDetails.paymentStatus === 'paid' ? 'Paid' :
                                        orderDetails.paymentStatus === 'pending' ? 'Payment Pending' : 
                                        'Payment Failed' 
                                    %>
                                    
                                    </span></b><br>
                                    <span id="order-status-badge" class="badge rounded-pill <%= orderDetails.orderStatus === 'delivered' ? 'bg-success' : 'bg-info' %>" style="font-size: 16px; padding: 8px 12px;">
                                        <%= orderDetails.orderStatus %>
                                    </span>
                                </div>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-borderless">
                                    <thead>
                                        <tr>
                                            <th>Product Image</th>
                                            <th>Product Name</th>
                                            <th>Quantity</th>
                                            <th>Price</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% orderDetails.orderedItem.forEach(function(item) { %>
                                            <tr>
                                                <td>
                                                    <img src="/upload/<%= item.productId.image[0] %>" alt="Product Image" class="img-thumbnail" style="max-width: 100px;">
                                                </td>
                                                <td><%= item.productId.name %></td>
                                                <td><%= item.quantity %></td>
                                                <td>₹<%= item.price %></td>
                                            </tr>
                                        <% }); %>
                                    </tbody>
                                    <tfoot>  
                                        
                                        <tr>
                                            <td colspan="3" class="text-end"><strong>Subtotal:</strong></td>
                                            <td>₹<%= orderDetails.orderAmount %></td>
                                        </tr>
                                        <% if (orderDetails.discountAmount > 0) { %>
                                            <tr>
                                                <td colspan="3" class="text-end"><strong>Discount:</strong></td>
                                                <td>₹<%= orderDetails.discountAmount %></td>
                                            </tr>
                                            <% } %>
                                            <tr>
                                                <td colspan="3" class="text-end"><strong>Shipping Charge:</strong></td>
                                                <td>₹<%= shippingCharge %></td> 
                                            </tr>
                                        <tr>
                                            <td colspan="3" class="text-end"><strong>Total:</strong></td>
                                            <td>₹<%= orderDetails.finalAmount %></td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                            <% if (orderDetails.orderStatus === 'canceled') { %>
                                <span class="badge rounded-pill alert-warning">Order Canceled</span>
                            <% } else if (orderDetails.orderStatus === 'returned') { %>
                                <span class="badge rounded-pill alert-warning">Order Returned</span>
                            <% } else if (orderDetails.orderStatus !== 'delivered') { %>
                                <button type="button" id="cancel-btn" class="btn btn-danger" data-id="<%= orderDetails._id %>">Cancel Order</button>
                            <% } else { %>
                                <button id="return-btn" data-id="<%= orderDetails._id %>" data-payment-method="<%= orderDetails.paymentMethod %>" data-bs-toggle="modal" data-bs-target="#returnReasonModal">Return Order</button>
                            <% } %>
                            <!-- <a href="/download-invoice?orderId=<%= orderDetails._id %>" class="btn btn-primary">Download Invoice</a> -->
                            <a href="#" class="btn btn-primary" onclick="checkOrderStatus('<%= orderDetails._id %>')">Download Invoice</a>

                        </div>
                        
                    </div>
                </div>
            
                <div class="col-lg-4 col-md-12">
                    <div class="card mb-4">
                        <div class="card-body">
                            <h3 class="card-title">Payment Method</h3>
                            <div class="d-flex justify-content-between">
                                <p class="mb-1"><strong>Method:</strong></p>
                                <p class="mb-1"><%= orderDetails.paymentMethod %></p>
                            </div>
                            <div class="d-flex justify-content-between">
                                <p class="mb-1"><strong>Total:</strong></p>
                                <p class="mb-1">₹<%= orderDetails.finalAmount %></p>
                            </div>
                        </div>
                    </div>
            
                    <div class="card mb-4">
                        <div class="card-body">
                            <h3 class="card-title">Shipping Information</h3>
                            <div class="d-flex justify-content-between">
                                <p class="mb-1"><strong>Name:</strong></p>
                                <p class="mb-1"><%= orderDetails.deliveryAddress.name %></p>
                            </div>
                            <div class="d-flex justify-content-between">
                                <p class="mb-1"><strong>Phone:</strong></p>
                                <p class="mb-1"><%= orderDetails.deliveryAddress.mobile %></p>
                            </div>
                           
                            <hr>
                            <h3 class="card-title">Address</h3>
                            <p class="mb-1"><strong>City:</strong> <%= orderDetails.deliveryAddress.city %>, <%= orderDetails.deliveryAddress.locality %></p>
                            <p class="mb-1"><strong>Address:</strong> <%= orderDetails.deliveryAddress.streetAddress %></p>
                            <p class="mb-1"><strong>State:</strong> <%= orderDetails.deliveryAddress.state %></p>
                            <p class="mb-1"><strong>PINCODE:</strong> <%= orderDetails.deliveryAddress.postalCode %></p>
                            <input type="hidden" name="" id="orderId" value="<%= orderDetails._id %>">
                        </div>
                    </div>
                </div>
            </div>

</div>
</div>
</div>
</div>

<input type="hidden" id="modalOrderId" value="<%= orderDetails._id %>">
<input type="hidden" id="modalPaymentMethod" value="Razorpay">
<!-- Return Order Modal -->
<div class="modal fade" id="returnReasonModal" tabindex="-1" aria-labelledby="returnReasonModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="returnReasonModalLabel">Return Order</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="orderId" value="">
                <input type="hidden" id="paymentMethod" value="">
                <div class="mb-3">
                    <label for="returnReason" class="form-label">Reason for Return</label>
                    <select id="returnReason" class="form-select">
                        <option value="damaged">Damaged</option>
                        <option value="wrong">Wrong Product</option>
                        <option value="notgood">Not Good</option>
                        <option value="other">Other</option>
                    </select>
                </div>
                <div class="mb-3" id="otherReasonDiv" style="display: none;">
                    <label for="otherReason" class="form-label">Please specify</label>
                    <input type="text" class="form-control" id="otherReason">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmReturn">Confirm Return</button>
            </div>
        </div>
    </div>
</div>


<script>
   document.addEventListener('DOMContentLoaded', function() {
    const cancelBtn = document.getElementById('cancel-btn');
    const statusBadge = document.getElementById('order-status-badge');
    const orderId = cancelBtn ? cancelBtn.getAttribute('data-id') : null;

    async function checkOrderStatus() {
        if (!orderId) return;

        try {
            const response = await fetch(`/getOrderStatus?orderId=${orderId}`);
            const data = await response.json();

            if (data.status === 'cancelled') {
                disableCancelButton();
                localStorage.setItem(`order_${orderId}`, 'canceled'); // Store in local storage
            }
        } catch (error) {
            console.error('Failed to fetch order status:', error);
        }
    }

    function disableCancelButton() {
        if (cancelBtn) {
            cancelBtn.disabled = true;
            cancelBtn.innerHTML = 'Order Canceled';
            cancelBtn.className = 'badge rounded-pill alert-warning';
            if (statusBadge) {
                statusBadge.textContent = 'canceled';
                statusBadge.className = 'badge rounded-pill bg-warning';
            }
        }
    }

    // Check local storage for order status
    if (localStorage.getItem(`order_${orderId}`) === 'canceled') {
        disableCancelButton();
    } else {
        checkOrderStatus();
    }

    if (cancelBtn) {
        cancelBtn.addEventListener('click', function() {
            Swal.fire({
                title: 'Are you sure?',
                text: 'You are about to cancel this order!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, cancel it!',
                cancelButtonText: 'No, keep it'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/cancelOrder/${orderId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ status: 'canceled' })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.error) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: data.error || 'Failed to cancel the order. Please try again.',
                                confirmButtonText: 'Ok'
                            });
                        } else {
                            Swal.fire({
                                icon: 'success',
                                title: 'Order Canceled',
                                text: 'Your order has been canceled successfully.',
                                confirmButtonText: 'Ok'
                            }).then(() => {
                                disableCancelButton();
                                localStorage.setItem(`order_${orderId}`, 'canceled'); // Update local storage
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Request failed:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Failed to cancel the order. Please try again.',
                            confirmButtonText: 'Ok'
                        });
                    });
                }
            });
        });
    }
});



</script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const returnBtn = document.getElementById('return-btn');
        const confirmReturnBtn = document.getElementById('confirmReturn');
    
        returnBtn?.addEventListener('click', function() {
            const orderId = this.getAttribute('data-id');
            document.getElementById('orderId').value = orderId;
        });
    
        confirmReturnBtn?.addEventListener('click', async function() {
            const orderId = document.getElementById('orderId').value;
            const returnReason = document.getElementById('returnReason').value;
            const otherReason = document.getElementById('otherReason').value;
    
            if (returnReason === 'other' && otherReason.trim() === '') {
                Swal.fire({
                    icon: 'warning',
                    title: 'Reason required',
                    text: 'Please specify the reason for return.'
                });
                return;
            }
    
            this.innerText = 'Processing...';
            this.disabled = true;
    
            try {
                const response = await fetch('/returnOrder', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        orderId: orderId,
                        returnReason: returnReason,
                        otherReason: otherReason
                    })
                });
    
                const data = await response.json();
                if (response.ok) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Return successful',
                        text: data.message
                    }).then(() => {
                        $('#returnReasonModal').modal('hide');
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Return failed',
                        text: data.error || 'Failed to return the order. Please try again.'
                    });
                }
            } catch (error) {
                console.error('Request failed:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to return the order. Please try again.'
                });
            } finally {
                this.innerText = 'Confirm Return';
                this.disabled = false;
            }
        });
    
        document.getElementById('returnReason').addEventListener('change', function() {
            const otherReasonDiv = document.getElementById('otherReasonDiv');
            otherReasonDiv.style.display = this.value === 'other' ? 'block' : 'none';
        });
    });
    </script>
    <script>
        async function checkOrderStatus(orderId) {
            try {
                const response = await fetch(`/api/order-status?orderId=${orderId}`);
                const data = await response.json();
        
                if (data.status === 'cancelled') {
                    // Show SweetAlert if the order is cancelled
                    Swal.fire({
                        icon: 'warning',
                        title: 'Cannot Download Invoice',
                        text: 'You cannot download the invoice for a canceled order.',
                        confirmButtonText: 'OK'
                    });
                } else {
                    window.location.href = `/download-invoice?orderId=${orderId}`;
                }
            } catch (error) {
                console.error('Error checking order status:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while checking the order status.',
                    confirmButtonText: 'OK'
                });
            }
        }
        </script>

<script>
    async function checkOrderStatus(orderId) {
        try {
            const response = await fetch(`/order-status?orderId=${orderId}`);
            const data = await response.json();
    
            if (data.status === 'cancelled') {
                Swal.fire({
                    icon: 'warning',
                    title: 'Cannot Download Invoice',
                    text: 'You cannot download the invoice for a canceled order.',
                    confirmButtonText: 'OK'
                });
            } else {
                window.location.href = `/download-invoice?orderId=${orderId}`;
            }
        } catch (error) {
            console.error('Error checking order status:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred while checking the order status.',
                confirmButtonText: 'OK'
            });
        }
    }
    </script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js" integrity="sha512-AA1Bzp5Q0K1KanKKmvN/4d3IRKVlv9PYgwFPvm32nPO6QS8yH1HO7LbgB1pgiOxPtfeg5zEn2ba64MUcqJx6CA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>